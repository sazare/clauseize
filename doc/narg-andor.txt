** 多引数の演算について
多引数演算を表記するために、関数形式で書くことにする。
つまり
∨(a1,a2,...)
∧(a1,a2,...)

と書く。これにともなって
¬(...)
∀x(...)
∃x(...)
≡(...)
⇒(...)
とも書くが、これらは1引数、2引数の関数形になる。
Quantifierについては、1引数の関数が命題の引数をとるようなもの。

---
意味
∧(a1,a2,...) == a1 ∧ a2 ∧ ...
∨(a1,a2,...) == a1 ∨ a2 ∨ ...

であり、次のような曖昧さがある。

∧(a) = ∨(a) = a

しかし
∧() = true
∨() = false

また
∧(∨(a)) = ∨(a) = ∧(a)) = ∨(∧(a)) 

これらは、多引数演算の曖昧さになるのだろう。
となるので、0,1引数の場合、同じだったり違っていたりする。。
実際に書くとき、直感的な意味にそって書けばよいのであり、操作が正しく定義されていれば問題ないはず。

定義は、帰納的定義を逆にさかのぼるとこうなる。

¬の交差はこのようになる
¬∨(a1,a2,...) = ∧(¬a1, ¬a2, ...)
¬∧(a1,a2,...) = ∨(¬a1, ¬a2,...)

このとき土・モルガンの法則はこうなる。

∧(∨(a1,a2,...,ak),∨(b1,b2,...,am),...) = ∨(∧(ai,bj))1≦i≦k,1≦j≦m
a,b,c,...となる場合も同様
∨(∧(a1,a2,...,ak),∧(b1,b2,...,am),...) = ∧(∨(ai,bj))1≦i≦k,1≦j≦m


